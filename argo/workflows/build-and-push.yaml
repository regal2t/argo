apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: build-and-push-
  namespace: argo
spec:
  entrypoint: build
  templates:
    - name: build
      steps:
        - - name: git-checkout
            template: git-checkout
        - - name: build-and-push
            template: build-and-push
        - - name: notify
            template: notify-slack

    - name: git-checkout
      container:
        image: bitnami/git:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            mkdir -p /work  # Create the directory if it doesn't exist
            git clone https://github.com/regal2t/argo.git /work  # Clone into /work/argo
            cd /work/argo && git checkout main
            ls /work/argo  # Debugging step to check the contents of the cloned directory
      volumeMounts:
        - name: work
          mountPath: /work

    - name: build-and-push
      container:
        image: docker:20.10.7
        command: ["sh", "-c"]
        args:
          - |
            apk update && apk add git
            mkdir -p /work
            git clone https://github.com/regal2t/argo.git /work
            cd /work && git checkout main
            ls -al /work/argo
            echo "Logging in to Docker Hub..."
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            echo "Building Docker Image..."
            docker build -f /work/argo/Dockerfile -t rajutiwari2024/argo-test:latest .
            echo "Pushing Docker Image..."
            docker push rajutiwari2024/argo-test:latest
            echo "Docker Image pushed successfully!"
        env:
          - name: DOCKER_USERNAME
            value: "raju.tiwari@intuji.com"  # Replace with your Docker Hub username
          - name: DOCKER_PASSWORD
            value: "H#Qfi4gY8meL&Gq$"        # Replace with your Docker Hub password
        volumeMounts:
          - name: work
            mountPath: /work

    - name: notify-slack
      container:
        image: curlimages/curl
        command: ["sh", "-c"]
        args: ["curl -X POST -H 'Content-type: application/json' --data '{\"text\": \"Build and Deployment Completed!\"}' $SLACK_WEBHOOK"]
        env:
          - name: SLACK_WEBHOOK
            value: "https://hooks.slack.com/services/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"

  volumes:
    - name: work
      emptyDir: {}
