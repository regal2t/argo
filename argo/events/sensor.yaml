apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: git-checkout-test-
spec:
  entrypoint: main
  volumeClaimTemplates:                 # Dynamically create a PVC
  - metadata:
      name: workdir                     # Name of the volume claim
    spec:
      accessModes: [ "ReadWriteOnce" ]  # Access mode for the volume
      resources:
        requests:
          storage: 1Gi                  # Request 1Gi of storage

  templates:
    - name: main
      steps:
        - - name: git-checkout
            template: git-checkout
        - - name: verify-work-directory
            template: verify-work-directory

    - name: git-checkout
      container:
        image: bitnami/git:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            mkdir -p /mnt/vol
            echo "Cloning repository..."
            git clone https://github.com/regal2t/argo.git /mnt/vol
            if [ $? -eq 0 ]; then
              echo "Git clone successful!"
              cd /mnt/vol && git checkout main
              echo "Current Git SHA:"
              git rev-parse HEAD > /mnt/vol/git_sha.txt
              ls /mnt/vol
            else
              echo "Git clone failed!"
              exit 1
            fi
        volumeMounts:
          - name: workdir               # Mount the PVC
            mountPath: /mnt/vol

    - name: verify-work-directory
      container:
        image: alpine:latest
        command: ["sh", "-c"]
        args:
          - |
            echo "Contents of /mnt/vol directory:"
            ls -al /mnt/vol
            echo "Contents of /mnt/vol/argo directory:"
            ls -al /mnt/vol/argo
            echo "Git SHA:"
            cat /mnt/vol/git_sha.txt
        volumeMounts:
          - name: workdir               # Mount the same PVC
            mountPath: /mnt/vol