apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: git-sensor
  namespace: argo-events
spec:
  dependencies:
    - name: git-dep
      eventSourceName: git-webhook-event
      eventName: git-webhook
  triggers:
    - template:
        name: workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: build-and-push-
                namespace: argo
              spec:
                entrypoint: build
                templates:
                  - name: build
                    steps:
                      - - name: git-checkout
                          template: git-checkout
                      - - name: build-and-push
                          template: build-and-push
                      - - name: notify
                          template: notify-slack

                  - name: git-checkout
                    container:
                      image: bitnami/git:latest
                      command: ["/bin/sh", "-c"]
                      args:
                        - |
                          mkdir -p /work
                          git clone https://github.com/regal2t/argo.git /work
                          cd /work/argo && git checkout main
                          ls /work/argo
                      volumeMounts:
                        - name: work
                          mountPath: /work

                  - name: build-and-push
                    container:
                      image: docker:20.10.7-dind
                      command: ["sh", "-c"]
                      args:
                        - |
                          dockerd &
                          while ! docker info > /dev/null 2>&1; do
                            sleep 1
                          done
                          echo "Docker daemon started!"
                          apk update && apk add git
                          mkdir -p /work
                          git clone https://github.com/regal2t/argo.git /work
                          cd /work && git checkout main
                          ls -al /work
                          echo "Logging in to Docker Hub..."
                          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                          echo "Building Docker Image..."
                          docker build -f /work/Dockerfile -t rajutiwari2024/argo-test:latest .
                          echo "Pushing Docker Image..."
                          docker push rajutiwari2024/argo-test:latest
                          echo "Docker Image pushed successfully!"
                      env:
                        - name: DOCKER_USERNAME
                          valueFrom:
                            secretKeyRef:
                              name: docker-credentials
                              key: username
                        - name: DOCKER_PASSWORD
                          valueFrom:
                            secretKeyRef:
                              name: docker-credentials
                              key: password
                      volumeMounts:
                        - name: work
                          mountPath: /work
                      securityContext:
                        privileged: true

                  - name: notify-slack
                    container:
                      image: curlimages/curl
                      command: ["sh", "-c"]
                      args: ["curl -X POST -H 'Content-type: application/json' --data '{\"text\": \"Build and Deployment Completed!\"}' $SLACK_WEBHOOK"]
                      env:
                        - name: SLACK_WEBHOOK
                          valueFrom:
                            secretKeyRef:
                              name: slack-webhook
                              key: url

                volumes:
                  - name: work
                    emptyDir: {}