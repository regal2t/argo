apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: git-sensor
  namespace: argo-events
spec:
  dependencies:
    - name: git-dep
      eventSourceName: git-webhook-event
      eventName: git-webhook
  triggers:
    - template:
        name: workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: git-checkout-test-
                namespace: argo
              spec:
                entrypoint: main
                volumeClaimTemplates: []  # Remove this section to prevent creating a new PVC each time
                volumes:
                  - name: workdir
                    persistentVolumeClaim:
                      claimName: workdir-pvc  # Reference your existing PVC here
                templates:
                  - name: main
                    steps:
                      - - name: git-checkout
                          template: git-checkout
                      - - name: verify-work-directory
                          template: verify-work-directory

                  - name: git-checkout
                    container:
                      image: bitnami/git:latest
                      command: ["/bin/sh", "-c"]
                      args:
                        - |
                          rm -rf /mnt/vol
                          git clone https://github.com/regal2t/argo.git /mnt/vol
                          cd /mnt/vol && git checkout main
                          echo "Current Git SHA:"
                          git rev-parse HEAD > /mnt/vol/git_sha.txt
                          ls /mnt/vol
                      volumeMounts:
                        - name: workdir
                          mountPath: /mnt/vol

                  - name: verify-work-directory
                    container:
                      image: alpine:latest
                      command: ["sh", "-c"]
                      args:
                        - |
                          echo "Contents of /mnt/vol directory:"
                          ls -al /mnt/vol
                          echo "Contents of /mnt/vol/argo directory:"
                          ls -al /mnt/vol/argo
                          echo "Git SHA:"
                          cat /mnt/vol/git_sha.txt
                      volumeMounts:
                        - name: workdir
                          mountPath: /mnt/vol
